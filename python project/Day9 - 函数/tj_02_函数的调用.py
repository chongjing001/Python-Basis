

"""
函数在声明的时候不会执行函数体，只有调用函数的时候才会执行函数体


"""


"""
1.函数的调用过程（重点！）
第一步：回到函数声明的位置
第二部：用实参给形参赋值（传参）
       保证每个形参都有值
第三部：执行函数体
第四部：获取返回值
第五步：回到函数调用的位置，向下执行


函数调用的过程是一个压栈的过程
当函数调用的时候，系统会自动在内存中开辟空间，存储函数调用过程中产生的数据
（参数和函数声明的变量），当调用完成后，对应的内存会自动销毁
"""
a = 10
b = 20


def exchange(a, b):

    a, b = b, a
    print("函数内：", a, b)


exchange(a, b)
print("函数外：", a, b)

